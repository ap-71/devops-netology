terraform {
  required_providers {
    yandex = {
      source = "terraform-registry.storage.yandexcloud.net/yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"

# backend "s3" {
#    endpoint   = "storage.yandexcloud.net"
#    bucket     = "netology-backet2"
#    region     = "ru-central1-a"
#    key        = "./terraform.tfstate"
#    access_key = "YCAJETS72hXp2OvSUAq6mTF0V"
#    secret_key = "YCPnYgKZzPVVVWLMeObGAXitRXWIJzllsw2UgQu2"
#
#    skip_region_validation      = true
#    skip_credentials_validation = true
#  }
#необходимо предварительно записать ключи в переменные
#export TF_VAR_yc_token="token"
#export TF_VAR_yc_cloud_id="id"
#export TF_VAR_yc_folder_id="id"
#export TF_VAR_access_key="id"
#export TF_VAR_secret_key="id"

}

provider "yandex" {

  token     = var.yc_token
  cloud_id  = var.yc_cloud_id
  folder_id = var.yc_folder_id
  zone      = var.yc_region
}
locals {
  web_instance_count_map = {
    default = 3
    stage = 1
    prod = 2
  }
}

// Create a new instance
resource "yandex_compute_instance" "vm-1" {
  name = "terraform-netology"

  resources {
    cores  = 2
    memory = 2
  }

boot_disk {
    initialize_params {
      image_id = "fd8iqd03vink8hs1nppp"
    }
  }
  count = local.web_instance_count_map[terraform.workspace]

network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${file("./meta.txt")}"
  }

lifecycle {
    create_before_destroy = true
  }
}
resource "yandex_vpc_network" "network-1" {
  name = "network1"
}

resource "yandex_vpc_subnet" "subnet-1" {
  name           = "subnet1"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network-1.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}

#output "internal_ip_address_vm_1" {
#  value = yandex_compute_instance.vm-1.network_interface.0.ip_address
#}
#
#output "external_ip_address_vm_1" {
#  value = yandex_compute_instance.vm-1.network_interface.0.nat_ip_address
#}
locals {
  web_instance_yc = {
    "default" = 3
    "stage" = 1
    "prod" = 2
  }
}
resource "yandex_compute_instance" "vm-2" {
  name = "terraform-netology"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8iqd03vink8hs1nppp"
    }
  }

  for_each = local.web_instance_yc

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${file("./meta.txt")}"
  }
}

resource "yandex_vpc_network" "network-2" {
  name = "network1main.tf"
}

resource "yandex_vpc_subnet" "subnet-2" {
  name           = "subnet1"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network-2.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}

